{"ast":null,"code":"import _classCallCheck from\"D:/Documents/Frontend-React.JS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"D:/Documents/Frontend-React.JS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"D:/Documents/Frontend-React.JS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"D:/Documents/Frontend-React.JS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component,Fragment}from'react';import{FormattedMessage,FormattedTime}from'react-intl';import CustomScrollBar from'../components/CustomScrollbars';import'./CustomToast.scss';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CustomToast=/*#__PURE__*/function(_Component){_inherits(CustomToast,_Component);var _super=_createSuper(CustomToast);function CustomToast(){_classCallCheck(this,CustomToast);return _super.apply(this,arguments);}_createClass(CustomToast,[{key:\"render\",value:function render(){var _this$props=this.props,titleId=_this$props.titleId,message=_this$props.message,messageId=_this$props.messageId,time=_this$props.time;return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"custom-toast\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toast-title\",children:[time&&/*#__PURE__*/_jsx(\"span\",{className:\"date\",children:/*#__PURE__*/_jsx(FormattedTime,{hour:\"numeric\",minute:\"numeric\",second:\"numeric\",hour12:true,value:time})}),/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-fw fa-exclamation-triangle\"}),/*#__PURE__*/_jsx(FormattedMessage,{id:titleId})]}),message&&typeof message==='object'?/*#__PURE__*/_jsx(CustomScrollBar,{autoHeight:true,autoHeightMin:50,autoHeightMax:100,children:message.map(function(msg,index){return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(\"div\",{className:\"toast-content\",children:msg})},index);})}):/*#__PURE__*/_jsx(\"div\",{className:\"toast-content\",children:message?message:messageId?/*#__PURE__*/_jsx(FormattedMessage,{id:messageId}):null})]})});}}]);return CustomToast;}(Component);export var CustomToastCloseButton=/*#__PURE__*/function(_Component2){_inherits(CustomToastCloseButton,_Component2);var _super2=_createSuper(CustomToastCloseButton);function CustomToastCloseButton(){_classCallCheck(this,CustomToastCloseButton);return _super2.apply(this,arguments);}_createClass(CustomToastCloseButton,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"toast-close\",onClick:this.props.closeToast,children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-fw fa-times-circle\"})});}}]);return CustomToastCloseButton;}(Component);export default CustomToast;","map":{"version":3,"sources":["D:/Documents/Frontend-React.JS/src/components/CustomToast.js"],"names":["React","Component","Fragment","FormattedMessage","FormattedTime","CustomScrollBar","CustomToast","props","titleId","message","messageId","time","map","msg","index","CustomToastCloseButton","closeToast"],"mappings":"okBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,gBAAT,CAA2BC,aAA3B,KAAgD,YAAhD,CAEA,MAAOC,CAAAA,eAAP,KAA4B,gCAA5B,CAEA,MAAO,oBAAP,C,2FAEMC,CAAAA,W,sPAEF,iBAAS,CACL,gBAA8C,KAAKC,KAAnD,CAAQC,OAAR,aAAQA,OAAR,CAAiBC,OAAjB,aAAiBA,OAAjB,CAA0BC,SAA1B,aAA0BA,SAA1B,CAAqCC,IAArC,aAAqCA,IAArC,CACA,mBACI,KAAC,QAAD,wBACI,aAAK,SAAS,CAAC,cAAf,wBACI,aAAK,SAAS,CAAC,aAAf,WACKA,IAAI,eACD,aAAM,SAAS,CAAC,MAAhB,uBACI,KAAC,aAAD,EAAe,IAAI,CAAC,SAApB,CAA8B,MAAM,CAAC,SAArC,CAA+C,MAAM,CAAC,SAAtD,CAAgE,MAAM,CAAE,IAAxE,CAA8E,KAAK,CAAEA,IAArF,EADJ,EAFR,cAMI,UAAG,SAAS,CAAC,kCAAb,EANJ,cAOI,KAAC,gBAAD,EAAkB,EAAE,CAAEH,OAAtB,EAPJ,GADJ,CAWSC,OAAO,EAAI,MAAOA,CAAAA,OAAP,GAAmB,QAA/B,cACI,KAAC,eAAD,EAAiB,UAAU,CAAE,IAA7B,CAAmC,aAAa,CAAE,EAAlD,CAAsD,aAAa,CAAE,GAArE,UAEQA,OAAO,CAACG,GAAR,CAAY,SAACC,GAAD,CAAMC,KAAN,CAAgB,CACxB,mBACI,KAAC,QAAD,wBACI,YAAK,SAAS,CAAC,eAAf,UAAgCD,GAAhC,EADJ,EAAeC,KAAf,CADJ,CAKH,CAND,CAFR,EADJ,cAYI,YAAK,SAAS,CAAC,eAAf,UACKL,OAAO,CAAGA,OAAH,CAAcC,SAAS,cAAI,KAAC,gBAAD,EAAkB,EAAE,CAAEA,SAAtB,EAAJ,CAA2C,IAD9E,EAvBZ,GADJ,EADJ,CAgCH,C,yBApCqBT,S,EAuC1B,UAAac,CAAAA,sBAAb,iTAEI,iBAAS,CACL,mBACI,eAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,aAAhC,CAA8C,OAAO,CAAE,KAAKR,KAAL,CAAWS,UAAlE,uBACI,UAAG,SAAS,CAAC,0BAAb,EADJ,EADJ,CAKH,CARL,oCAA4Cf,SAA5C,EAWA,cAAeK,CAAAA,WAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { FormattedMessage, FormattedTime } from 'react-intl';\n\nimport CustomScrollBar from '../components/CustomScrollbars';\n\nimport './CustomToast.scss';\n\nclass CustomToast extends Component {\n\n    render() {\n        const { titleId, message, messageId, time } = this.props;\n        return (\n            <Fragment>\n                <div className=\"custom-toast\">\n                    <div className=\"toast-title\">\n                        {time && (\n                            <span className=\"date\">\n                                <FormattedTime hour='numeric' minute='numeric' second='numeric' hour12={true} value={time} />\n                            </span>\n                        )}\n                        <i className=\"fa fa-fw fa-exclamation-triangle\" />\n                        <FormattedMessage id={titleId} />\n                    </div>\n                    {\n                        (message && typeof message === 'object') ?\n                            <CustomScrollBar autoHeight={true} autoHeightMin={50} autoHeightMax={100}>\n                                {\n                                    message.map((msg, index) => {\n                                        return (\n                                            <Fragment key={index}>\n                                                <div className=\"toast-content\">{msg}</div>\n                                            </Fragment>\n                                        )\n                                    })\n                                }\n                            </CustomScrollBar> :\n                            <div className=\"toast-content\">\n                                {message ? message : (messageId ? (<FormattedMessage id={messageId} />) : null)}\n                            </div>\n                    }\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport class CustomToastCloseButton extends Component {\n\n    render() {\n        return (\n            <button type=\"button\" className=\"toast-close\" onClick={this.props.closeToast}>\n                <i className=\"fa fa-fw fa-times-circle\" />\n            </button>\n        );\n    }\n}\n\nexport default CustomToast;"]},"metadata":{},"sourceType":"module"}